'''
格式化用%实现,
%s表示用字符串替换，
%d表示用整数替换，
%f浮点数
%%来表示一个%
有几个%?占位符，后面就跟几个变量或者值，顺序要对应好。
如果只有一个%?，括号可以省略。
'''
print('I have %d cats named %s, %s, %s'%(3, 'miaomiao', 'hei', 'sanmiao'))

'''
还有一种格式化字符串的方法是使用以f开头的字符串，
称之为f-string，
它和普通字符串不同之处在于，字符串如果包含{xxx}，就会以对应的变量替换
'''
wifename = 'cheralchen'
wifecount = 1
print(f'我老婆是{wifename}, 我有{wifecount}个老婆')

'''
练习
小明的成绩从去年的72分提升到了今年的85分，
请计算小明成绩提升的百分点，
并用字符串格式化显示出'xx.x%'，只保留小数点后1位
'''

lyscore = 72
tyscore = 85
up = ((tyscore-lyscore)/lyscore)*100
'''
f-string 格式化：
使用 f'{up:.1f}%' 
能把 up 变量格式化为保留小数点后 1 位的百分比形式。
'''
print(f'debug...去年成绩{lyscore},今年成绩{tyscore},提升率为{up:.1f}%')
'''传统 % 格式化：
用 %.1f%% 把 up 变量格式化为保留小数点后 1 位的百分比形式，
这里的 %% 用于转义，以输出真正的 % 符号。
'''
print('debug...去年成绩%d,今年成绩%d,%.1f%%'%(lyscore, tyscore, up))

'''
问题：
多种格式化方式混用
逗号分隔（非格式化，仅用于拼接）
用逗号分隔字符串和变量，输出有多余空格。
f'{up:.1f}%'  本应嵌入字符串，却作为独立参数传递，逻辑混乱。
例子如下
'''
print('debug...', '去年成绩', lyscore, '今年成绩', tyscore, '提升率', f'{up:.1f}%',)